---
layout: getstarted-steps-commercialize
title: Windows 10 IoT Core Official Website | Developer Resource
description: Windows 10 IoT Core for your Internet of Things. 
keyword: windows iot, get started, home page, iot
permalink: /en-US/GetStarted/Commercialize/AddApplication.htm
lang: en-US
---

<header>
    <h3 class="c-heading-3">Add your application</h3>
    <p class="c-paragraph-3">We're now going to take your app, package it up, and create a new image you can load onto new devices.</p>
</header>
<section class="pad-thin">
    <h3 class="c-subheading-3">Create an Appx package</h3>
    <p class="c-paragraph-3">For background apps, use the same method to install and run them. You can skip these steps if you've already created and tested your app.</p>
    <ol class="c-list">
        <li>Create a UWP app. This can be any app designed for IoT Core saved as an Appx package. For our example, we are using the <a href="https://github.com/ms-iot/samples/tree/develop/IoTCoreDefaultApp" class="c-hyperlink">IoT Core Default App</a>.</li>
        <li>In Visual Studio, to save the IoT Core Default app as an Appx package, click <b>Project > Store > Create App Packages > No > Next</b></li>
        <li>Select <b>Output location: C:\DefaultApp</b> (or any other path that doesn't include spaces)</li>
        <li>Select <b>Generate app bundle: Never</b></li>
        <li>Click <b>Create</b>. Visual Studio will create the Appx file into 
            <blockquote class="c-blockquote">
                <p class="c-paragraph">C:\DefaultApp\IoTCoreDefaultApp_1.2.0.0_ARM_Debug_Test</p>
            </blockquote>
            You can also optionally test the app as well.
        </li>
    </ol>    
</section>
<section>
    <h3 class="c-subheading-3">Create a package for the app</h3>
    <ol class="c-list">
            <li>Launch the IoT Core Shell and create a new package for the app. For example:
                <blockquote class="c-blockquote">
                    <p class="c-paragraph">newAppxPkg "C:\DefaultApp\IoTCoreDefaultApp_1.2.0.0_ARM_Debug_Test\IoTCoreDefaultApp_1.2.0.0_ARM_Debug_Test.appx" fga Appx.MyUWPApp</p>
                </blockquote>
                This creates a new folder at
                <blockquote class="c-blockquote">
                    <p class="c-paragraph"> C:\IoT-ADK-AddonKit\Source-&lt;arch&gt;\Packages\Appx.MyUWPApp</p>
                </blockquote> and generates a customizations.xml file as well as a package xml file that is used to build the package.
            </li>
            <li>From the IoT Core Shell, build the package.
                <blockquote class="c-blockquote">
                    <p class="c-paragraph">buildpkg Appx.MyUWPApp</p>
                </blockquote>
                The package is built, appearing as 
                <blockquote class="c-blockquote">
                    <p class="c-paragraph">C:\IoT-ADK-AddonKiT\Build\&lt;arch&gt;\pkgs\&lt;your OEM name&gt;.Appx.MyUWPApp.cab</p>
                </blockquote>
            </li>
        </ol>
</section>
<section>
    <h3 class="c-subheading-3">Add your app package to the feature manifest</h3>
    <ol class="c-list">
        <li>Open your feature file at 
            <blockquote class="c-blockquote">
                <p class="c-paragraph">C:\IoT-ADK-AddonKit\Source-&lt;arch&gt;\Packages\OEMFM.xml</p>
            </blockquote>
        </li>
        <li>Create a new PackageFile section in the XML with your package file listed and give it a new FeatureID such as "OEM_MyUWPApp".
            <blockquote class="c-blockquote">
                <xmp>
<?xml version="1.0" encoding="utf-8"?>  
<FeatureManifest   
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema"   
xmlns="http://schemas.microsoft.com/embedded/2004/10/ImageUpdate">  
<BasePackages/>  
<Features>  
<OEM>  
  <!-- Feature definitions below -->  
  <PackageFile Path="%PKGBLD_DIR%" Name="%OEM_NAME%.Appx.IoTCoreDefaultApp.cab">  
    <FeatureIDs>  
      <FeatureID>OEM_IoTCoreDefaultApp</FeatureID>  
    </FeatureIDs>  
  </PackageFile>  
  <PackageFile Path="%PKGBLD_DIR%" Name="%OEM_NAME%.Appx.IoTOnboardingTask.cab">  
    <FeatureIDs>  
      <FeatureID>OEM_IoTOnboardingTask</FeatureID>  
    </FeatureIDs>  
  </PackageFile>  
  <PackageFile Path="%PKGBLD_DIR%" Name="%OEM_NAME%.Appx.MyUWPApp.cab">  
    <FeatureIDs>  
      <FeatureID>OEM_MyUWPApp</FeatureID>  
    </FeatureIDs>  
  </PackageFile>        
</OEM>  
<OEMFeatureGroups/>  
</Features>  
</FeatureManifest> 
                </xmp>
            </blockquote>
        </li>
    </ol>   
</section>
<section>
    <h3 class="c-subheading-3">Update project configuration files</h3>
    <ol class="c-list">
        <li>Open your product's test configuration file at 
            <blockquote class="c-blockquote">
                <p class="c-paragraph">
                    <xmp>C:\IoT-ADK-AddonKit\Source-<arch>\Products\ProductsA\TestOEMInput.xml</xmp>   
                </p>
            </blockquote>
        </li>
        <li>Make sure both your OEMFM.xml and OEMCommonFM.xml feature manifests are listed in the AdditionalFMs section.
                <blockquote class="c-blockquote">
                        <p class="c-paragraph">
                            <xmp>
<AdditionalFMs>  
      <!-- Including BSP feature manifest -->  
      <AdditionalFM>%BLD_DIR%\MergedFMs\DeviceFM.xml</AdditionalFM>  
      <!-- Including OEM feature manifest -->  
      <AdditionalFM>%BLD_DIR%\MergedFMs\OEMCommonFM.xml</AdditionalFM>  
      <AdditionalFM>%BLD_DIR%\MergedFMs\OEMFM.xml</AdditionalFM>  
       <!-- Including the test features -->  
       <AdditionalFM>%AKROOT%\FMFiles\<architecture>\IoTUAPNonProductionPartnerShareFM.xml</AdditionalFM>  
</AdditionalFMs> 
                            </xmp>   
                        </p>
                    </blockquote>
        </li>
        <li>Change the features included in the product:
            <ol class="c-list">
                <li>Remove the sample test apps by adding comment tags.</li>
                <li>Confirm that the OEM features - OEM_CustomCmd and OEM_ProvAuto - are present.</li>
                <li>Add the FeatureID for your app package, e.g. OEM_MyUWPApp.</li>
            </ol>
            <blockquote class="c-blockquote">
                    <p class="c-paragraph">
                        <xmp>
<Features>  
  <Microsoft>  
  
...  

<!-- Sample Apps, remove this when you introduce OEM Apps   
  <Feature>IOT_BERTHA</Feature> -->  
  <Feature>IOT_ALLJOYN_APP</Feature>  
  <Feature>IOT_NANORDPSERVER</Feature>  
  <Feature>IOT_SHELL_HOTKEY_SUPPORT</Feature>  
  <Feature>IOT_APPLICATIONS</Feature>  
  
</Microsoft>  
<OEM>  
  <!-- Include BSP Features -->  
  <Feature>DEVICE_DRIVERS</Feature>  
  <!-- Include OEM features -->  
  <Feature>OEM_CustomCmd</Feature>  
  <Feature>OEM_ProvAuto</Feature>  
  <Feature>OEM_MyUWPApp</Feature>  
</OEM>  
                        </xmp>   
                    </p>
                </blockquote>
        </li>
    </ol>   
</section>
<section>
    <h3 class="c-subheading-3">Build and test the image</h3>
    <p class="c-paragraph-3">Build and test the image using the same procedures from the previous step. After a short while, the device should start automatically and you should see your app.</p> 
</section>
<section data-grid="col-12" class="pad-thin">
    <div data-grid="col-4">
        <a class="c-action-trigger c-glyph glyph-chevron-left" href="{{site.baseurl}}/{{page.lang}}/GetStarted/Commercialize/AddDrivers.htm">Previous: Add necessary drivers</a>
    </div>
    <div data-grid="col-6"></div>
    <div data-grid="col-2">
        <a class="c-action-trigger c-glyph-after glyph-chevron-right" href="{{site.baseurl}}/{{page.lang}}/GetStarted/Commercialize/AddCommonPackages.htm">Next: Add common packages</a>
    </div>
</section>